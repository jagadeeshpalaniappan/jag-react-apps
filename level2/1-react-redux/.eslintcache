[{"/Users/jag/jag/JUNIVERSE/GIT/JAG-FRONTEND/JAG-REACT/jag-react-apps/level2/1-react-redux/src/modules/post/components/PostStatus.js":"1","/Users/jag/jag/JUNIVERSE/GIT/JAG-FRONTEND/JAG-REACT/jag-react-apps/level2/1-react-redux/src/modules/post/state/selectors.js":"2","/Users/jag/jag/JUNIVERSE/GIT/JAG-FRONTEND/JAG-REACT/jag-react-apps/level2/1-react-redux/src/modules/post/state/reducer.js":"3","/Users/jag/jag/JUNIVERSE/GIT/JAG-FRONTEND/JAG-REACT/jag-react-apps/level2/1-react-redux/src/modules/post/state/getPosts/reducer.js":"4","/Users/jag/jag/JUNIVERSE/GIT/JAG-FRONTEND/JAG-REACT/jag-react-apps/level2/1-react-redux/src/modules/post/components/PostToolbar/ActiveFilterDropDown.js":"5","/Users/jag/jag/JUNIVERSE/GIT/JAG-FRONTEND/JAG-REACT/jag-react-apps/level2/1-react-redux/src/modules/post/components/PostToolbar/Search.js":"6","/Users/jag/jag/JUNIVERSE/GIT/JAG-FRONTEND/JAG-REACT/jag-react-apps/level2/1-react-redux/src/modules/post/components/PostModal.js":"7","/Users/jag/jag/JUNIVERSE/GIT/JAG-FRONTEND/JAG-REACT/jag-react-apps/level2/1-react-redux/src/modules/post/state/deletePost/reducer.js":"8","/Users/jag/jag/JUNIVERSE/GIT/JAG-FRONTEND/JAG-REACT/jag-react-apps/level2/1-react-redux/src/modules/post/state/createPost/reducer.js":"9","/Users/jag/jag/JUNIVERSE/GIT/JAG-FRONTEND/JAG-REACT/jag-react-apps/level2/1-react-redux/src/modules/post/components/PostList/List.js":"10","/Users/jag/jag/JUNIVERSE/GIT/JAG-FRONTEND/JAG-REACT/jag-react-apps/level2/1-react-redux/src/modules/post/components/PostList/index.js":"11"},{"size":3578,"mtime":1610036920829,"results":"12","hashOfConfig":"13"},{"size":1459,"mtime":1610036786610,"results":"14","hashOfConfig":"13"},{"size":3467,"mtime":1610036252033,"results":"15","hashOfConfig":"13"},{"size":1085,"mtime":1610036476272,"results":"16","hashOfConfig":"13"},{"size":1493,"mtime":1610036601492,"results":"17","hashOfConfig":"13"},{"size":1022,"mtime":1610036682214,"results":"18","hashOfConfig":"13"},{"size":1735,"mtime":1610036838719,"results":"19","hashOfConfig":"13"},{"size":1419,"mtime":1610037215055,"results":"20","hashOfConfig":"13"},{"size":1365,"mtime":1610037173028,"results":"21","hashOfConfig":"13"},{"size":553,"mtime":1610037629161,"results":"22","hashOfConfig":"13"},{"size":617,"mtime":1610037655686,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"jhucyd",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},"/Users/jag/jag/JUNIVERSE/GIT/JAG-FRONTEND/JAG-REACT/jag-react-apps/level2/1-react-redux/src/modules/post/components/PostStatus.js",["49"],"/Users/jag/jag/JUNIVERSE/GIT/JAG-FRONTEND/JAG-REACT/jag-react-apps/level2/1-react-redux/src/modules/post/state/selectors.js",[],"/Users/jag/jag/JUNIVERSE/GIT/JAG-FRONTEND/JAG-REACT/jag-react-apps/level2/1-react-redux/src/modules/post/state/reducer.js",[],"/Users/jag/jag/JUNIVERSE/GIT/JAG-FRONTEND/JAG-REACT/jag-react-apps/level2/1-react-redux/src/modules/post/state/getPosts/reducer.js",[],"/Users/jag/jag/JUNIVERSE/GIT/JAG-FRONTEND/JAG-REACT/jag-react-apps/level2/1-react-redux/src/modules/post/components/PostToolbar/ActiveFilterDropDown.js",[],"/Users/jag/jag/JUNIVERSE/GIT/JAG-FRONTEND/JAG-REACT/jag-react-apps/level2/1-react-redux/src/modules/post/components/PostToolbar/Search.js",[],"/Users/jag/jag/JUNIVERSE/GIT/JAG-FRONTEND/JAG-REACT/jag-react-apps/level2/1-react-redux/src/modules/post/components/PostModal.js",["50","51"],"/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport PostForm from \"./PostForm\";\nimport { PostMutaionStatus } from \"./PostStatus\";\nimport { apiCreatePostAction } from \"../state/createPost/actions\";\nimport { apiUpdatePostAction } from \"../state/updatePost/actions\";\nimport { closePostModalAndResetStatusAction } from \"../state/postModal/actions\";\nimport { getPostModal } from \"../state/selectors\";\n\nconst PostModal = ({\n  isOpen,\n  post,\n  apiCreatePostAction,\n  apiUpdatePostAction,\n  onClose,\n}) => {\n  const handleSave = (formPost) => {\n    if (formPost.id) apiUpdatePostAction(formPost);\n    else apiCreatePostAction(formPost);\n  };\n\n  const toggle = (...args) => {\n    console.log(\"toggle\", args);\n    onClose();\n  };\n\n  return (\n    <div>\n      <Modal\n        isOpen={isOpen}\n        toggle={toggle}\n        backdrop\n        keyboard\n        contentClassName=\"bg-light\"\n      >\n        <ModalHeader className=\"border-0\">\n          {post && post.id ? \"Update Post\" : \"Create Post\"}\n        </ModalHeader>\n        <ModalBody className=\"px-5\">\n          <PostMutaionStatus />\n          <PostForm post={post} onSave={handleSave} onCancel={onClose} />\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { isOpen, post } = getPostModal(state);\n  return { isOpen, post };\n};\n\nconst mapDispatchToProps = {\n  apiCreatePostAction,\n  apiUpdatePostAction,\n  onClose: closePostModalAndResetStatusAction,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(PostModal));\n","/Users/jag/jag/JUNIVERSE/GIT/JAG-FRONTEND/JAG-REACT/jag-react-apps/level2/1-react-redux/src/modules/post/state/deletePost/reducer.js",[],"/Users/jag/jag/JUNIVERSE/GIT/JAG-FRONTEND/JAG-REACT/jag-react-apps/level2/1-react-redux/src/modules/post/state/createPost/reducer.js",[],"/Users/jag/jag/JUNIVERSE/GIT/JAG-FRONTEND/JAG-REACT/jag-react-apps/level2/1-react-redux/src/modules/post/components/PostList/List.js",["52"],"import React, { memo } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { apiGetPostsAction } from \"../../state/getPosts/actions\";\nimport { getVisiblePosts } from \"../../state/selectors\";\nimport ListItem from \"./ListItem\";\n\nfunction List({ postIds }) {\n  return (\n    <ul className=\"list-group\">\n      {postIds &&\n        postIds.map((postId) => <ListItem key={postId} postId={postId} />)}\n    </ul>\n  );\n}\n\nconst mapStateToProps = (state) => ({ postIds: getVisiblePosts(state) });\nexport default connect(mapStateToProps, null)(memo(List));\n","/Users/jag/jag/JUNIVERSE/GIT/JAG-FRONTEND/JAG-REACT/jag-react-apps/level2/1-react-redux/src/modules/post/components/PostList/index.js",["53"],"import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { apiGetPostsAction } from \"../../state/getPosts/actions\";\nimport { getVisiblePosts } from \"../../state/selectors\";\nimport { PostListStatus } from \"../PostStatus\";\nimport List from \"./List\";\n\nexport const PostList = ({ apiGetPostsAction }) => {\n  console.log(\"PostList\");\n  useEffect(() => {\n    apiGetPostsAction();\n  }, [apiGetPostsAction]);\n  return (\n    <>\n      <PostListStatus />\n      <List />\n    </>\n  );\n};\n\nconst mapDispatchToProps = { apiGetPostsAction };\nexport default connect(null, mapDispatchToProps)(PostList);\n",{"ruleId":"54","severity":1,"message":"55","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":25},{"ruleId":"54","severity":1,"message":"55","line":3,"column":17,"nodeType":"56","messageId":"57","endLine":3,"endColumn":25},{"ruleId":"54","severity":1,"message":"58","line":5,"column":10,"nodeType":"56","messageId":"57","endLine":5,"endColumn":24},{"ruleId":"54","severity":1,"message":"59","line":4,"column":10,"nodeType":"56","messageId":"57","endLine":4,"endColumn":27},{"ruleId":"54","severity":1,"message":"60","line":4,"column":10,"nodeType":"56","messageId":"57","endLine":4,"endColumn":25},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'createSelector' is defined but never used.","'apiGetPostsAction' is defined but never used.","'getVisiblePosts' is defined but never used."]